package co.wedevx.digitalbank.automation.api.utils;

import co.wedevx.digitalbank.automation.ui.utils.ConfigReader;
import io.restassured.RestAssured;
import io.restassured.http.ContentType;
import io.restassured.path.json.JsonPath;
import io.restassured.response.Response;
import io.restassured.specification.RequestSpecification;

public class RestHttpRequest {

    public static RequestSpecification requestSpecification = RestAssured.given();
    public final static String authToken; // now it will generate the token once and it is final
    //token is autogenerated no need to regenerate

    //static initializer - it runs once for the whole project automatically, no need to call it
    //there is an instance initializer as well
    static {
        requestSpecification.baseUri(ConfigReader.getPropertiesValue("digitalbank.base.api.uri"));
        authToken = generateAuthToken();
        addHeaders();
    }

    private static String generateAuthToken() {
        Response authRequestResponse = requestSpecification
                .queryParam("username", ConfigReader.getPropertiesValue("digitalbank.api.admin.username"))
                .queryParam("password", ConfigReader.getPropertiesValue("digitalbank.api.admin.password"))
                .when()
                .post("/auth");

        JsonPath authResponseJsonPath = authRequestResponse.jsonPath();
        return authResponseJsonPath.getString("authToken");

    }

    private static void addHeaders() {
        requestSpecification.contentType(ContentType.JSON)
                .accept(ContentType.JSON)
                .header("Authorization", "Bearer " + authToken);

    }

    public static Response sendPostRequestWithPathParam
            (String endpoint, String pathParamId, Object pathParamValue, String body) {
        return requestSpecification
                .body(body)
                .pathParams(pathParamId, pathParamValue)
                .when()
                .post(endpoint);

    }

}
